<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>weixin-dns-maven-slave</groupId>
  <artifactId>weixin-dns-maven-slave</artifactId>
 <version>1.13-SNAPSHOT</version> 
  
 <name>SCM Sample Project</name>
 <description>SCM Sample Project</description>
 <url>https://github.com/quantmod/maven_scm</url>
 
 <licenses>
     <license>
       <name>The Apache License, Version 2.0</name>
       <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
     </license>
   </licenses>



<!-- 	
		提交：

		mvn -Dmessage="first commit" scm:checkin
		
		获取最新版本：
		
		mvn scm:update

 -->

     <scm>  
     <!--  git项目地址可以用SSH  也可以用 HTTPS的       -->
      <connection>scm:git:https://github.com/quantmod/maven_scm.git</connection>    
      <developerConnection>scm:git:https://github.com/quantmod/maven_scm.git</developerConnection>  
  <!--   git项目浏览器里的地址      -->
     <url>https://github.com/quantmod/maven_scm</url>  
      <tag>v1.12</tag>
    </scm>  
    
    <developers>
        <developer>
            <id>code4craft</id>
            <name>Yihua huang</name>
            <email>code4crafer@gmail.com</email>
        </developer>
        <developer>
            <id>yuanhai</id>
            <name>Yuan Hai</name>
            <email>jethai@126.com</email>
        </developer>
    </developers>

   
  <packaging>jar</packaging>
  
  
           <properties>
              
                <java.home>C:\Program Files\Java\jdk1.6.0_43</java.home>
                 <scala.version>2.10.4</scala.version>
            </properties>
  
  

  
    
  
  <dependencies>
  <dependency>
    <groupId>com.github.junrar</groupId>
    <artifactId>junrar</artifactId>
    <version>0.7</version>
</dependency>
  <dependency>
    <groupId>ant</groupId>
    <artifactId>ant</artifactId>
    <version>1.6.5</version>
</dependency>
  <dependency>
    <groupId>org.python</groupId>
    <artifactId>jython</artifactId>
    <version>2.7.1b1</version>
</dependency>
  <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
     <version>4.12</version>
    </dependency>
	
	<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-test</artifactId>
    <version>4.3.5.RELEASE</version>
	</dependency>
		
		<dependency>
    <groupId>hbaseapi</groupId>
    <artifactId>hbaseapi</artifactId>
    <version>1.0</version>
    </dependency>
    
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

      <!--探测编码  -->
		<dependency>
		    <groupId>net.sourceforge.jchardet</groupId>
		    <artifactId>jchardet</artifactId>
		    <version>1.0</version>
		</dependency>
		
		<dependency>
   	 	<groupId>cpdetector</groupId>
    	<artifactId>cpdetector</artifactId>
    	<version>1.0.8</version>
		</dependency>


<!--SpringMvc 对象转json所需jar包  -->
		<dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-core</artifactId>  
            <version>2.1.0</version>  
        </dependency>  
        <dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-databind</artifactId>  
            <version>2.1.0</version>  
        </dependency>  
        <dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-annotations</artifactId>  
            <version>2.1.0</version>  
        </dependency> 
    
    <!-- mysql -->
    <dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>5.1.37</version>
	</dependency>
    
    
 <!--    lo4j -->
 
	 <dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.12</version>
	</dependency>

<!--      <dependency>
    <groupId>aopalliance</groupId>
    <artifactId>aopalliance</artifactId>
    <version>1.0</version>
	</dependency>
 -->
   <dependency>
    <groupId>aspectj</groupId>
    <artifactId>aspectjweaver</artifactId>
    <version>1.5.3</version>
	</dependency>
	
	
	<!-- spring -->
	<dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>4.2.2.RELEASE</version>
        
    </dependency>
    
    
    <dependency>
    <groupId>javax.mail</groupId>
    <artifactId>mail</artifactId>
    <version>1.4</version>
	</dependency>  
	
	
    <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-orm</artifactId>
    <version>4.2.2.RELEASE</version>
	</dependency>
	
	
	<!-- 包含了对定时任务的支持 -->
	<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-context-support</artifactId>
    <version>4.2.2.RELEASE</version>
</dependency>


    
   
   <!--  springmvc -->
    
    <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-webmvc</artifactId>
    <version>4.2.2.RELEASE</version>
	</dependency>
    
   
    
     <!-- jsoup -->
    <dependency>
    <groupId>org.jsoup</groupId>
    <artifactId>jsoup</artifactId>
    <version>1.10.1</version>
	</dependency>
    <!-- hmlunit -->
    <dependency>
    <groupId>net.sourceforge.htmlunit</groupId>
    <artifactId>htmlunit</artifactId>
    <version>2.13</version>
	</dependency>
    
    
    <!-- json转对象 必须指定jdk版本，否则报错-->
<dependency>
    <groupId>net.sf.json-lib</groupId>
    <artifactId>json-lib</artifactId>
    <version>2.4</version>
     <classifier>jdk15</classifier>
</dependency>


<dependency>
    <groupId>org.quartz-scheduler</groupId>
    <artifactId>quartz</artifactId>
    <version>2.2.1</version>
   			<exclusions>
                <exclusion>
                     <groupId>c3p0</groupId>
     				 <artifactId>c3p0</artifactId>
                </exclusion>
            </exclusions>
</dependency>


<!-- selenium -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>2.53.0</version>
</dependency>

    <dependency>
    <groupId>com.github.detro.ghostdriver</groupId>
    <artifactId>phantomjsdriver</artifactId>
    <version>1.1.0</version>
</dependency>  
  
  
  <dependency>
    <groupId>org.apache.hbase</groupId>
    <artifactId>hbase-client</artifactId>
    <version>0.98.20-hadoop2</version>
</dependency>


 <dependency>
        <groupId>jdk.tools</groupId>
        <artifactId>jdk.tools</artifactId>
        <version>1.6</version>
        <scope>system</scope>
        <systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
    </dependency>


<!-- excel -->
  <dependency>     
    <groupId>net.sourceforge.jexcelapi</groupId> 
      <artifactId>jxl</artifactId>     
      <version>2.6.12</version> 
    </dependency> 
    
    
    <dependency>
	    <groupId>cn.wanghaomiao</groupId>
	    <artifactId>JsoupXpath</artifactId>
	    <version>0.1.1</version>
	</dependency>
	
	
	<!-- excel -->
	<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi</artifactId>
    <version>3.7</version>
	</dependency>
	
<!-- 	<dependency>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-resources-plugin</artifactId>
    <version>2.4.3</version>
</dependency> -->
    
    <!-- xpath -->
    <dependency>
    <groupId>sax</groupId>
    <artifactId>sax</artifactId>
    <version>2.0.1</version>
	</dependency>
	
   <!-- hibernate -->
    <dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-c3p0</artifactId>
    <version>4.2.21.Final</version>
	</dependency>
	
<!--c3p0连接池所需jar包(c3p0,mchange-commons-java)，版本还需要匹配，不然找不到某些类-->
<dependency>
    <groupId>com.mchange</groupId>
    <artifactId>c3p0</artifactId>
    <version>0.9.5.2</version>
    	<exclusions>
                <exclusion>
             <groupId>com.mchange</groupId>
    		 <artifactId>mchange-commons-java</artifactId>
                </exclusion>
            </exclusions>   
</dependency>

<dependency>
    <groupId>com.mchange</groupId>
    <artifactId>mchange-commons-java</artifactId>
    <version>0.2.12</version>
</dependency>


<!--dbcp连接池所需jar包(commons-dbcp,commons-pool),版本也需要配套  -->

<dependency>
    <groupId>commons-dbcp</groupId>
    <artifactId>commons-dbcp</artifactId>
    <version>1.4</version>
</dependency>

<dependency>
    <groupId>commons-pool</groupId>
    <artifactId>commons-pool</artifactId>
    <version>1.6</version>
</dependency>



<!-- hadoop-->


<dependency>
    <groupId>org.apache.flume</groupId>
    <artifactId>flume-ng-core</artifactId>
    <version>1.5.0</version>
</dependency>


<dependency>
    <groupId>org.apache.kafka</groupId>
    <artifactId>kafka_2.10</artifactId>
    <version>0.8.2.0</version>
</dependency>


<!-- 日志直接写入flume -->
<dependency>
    <groupId>org.apache.flume.flume-ng-clients</groupId>
    <artifactId>flume-ng-log4jappender</artifactId>
    <version>1.5.0</version>
</dependency>

<dependency>
    <groupId>org.apache.flume.flume-ng-sinks</groupId>
    <artifactId>flume-ng-hbase-sink</artifactId>
    <version>1.5.0</version>
</dependency>

     <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        
   </dependencies>
  
  
  
  <build>
  
  

   <!--源文件夹  -->
   <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory> src/test/java </testSourceDirectory>  
    <!--多个资源文件 夹-->
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
   <testResources>  
       <testResource>  
          <directory>src/test/resources </directory>  
       </testResource>  
   </testResources>  
   
   
   
    
    <plugins>
    
    
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
        <!-- 解决中文乱码 ,maven默认是GBK-->
       	 <encoding>UTF-8</encoding>
       	 <compilerArguments>
                   		<extdirs>WebContent\WEB-INF\lib</extdirs>
         </compilerArguments>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      
      
      
      	 <plugin>
				
				<artifactId>maven-resources-plugin</artifactId>
				 <version>2.4.3</version>
				<!-- 解决中文乱码 ,maven默认是GBK-->
				<configuration>
					<encoding>UTF-8</encoding>
					
				</configuration>
			</plugin>
		<!--打包源码-->		
       <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- 打包文档 -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <encoding>UTF-8</encoding>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
		
		
    <plugin>  
      <groupId>org.apache.maven.plugins</groupId>  
        <artifactId>maven-release-plugin</artifactId>  
        <version>2.5</version>  
        <configuration> 
           <tagBase>https://github.com/quantmod/maven_scm/tags/</tagBase>  
           <branchBase>https://github.com/quantmod/maven_scm/branches</branchBase>  
                    <tagNameFormat>@{version}</tagNameFormat> 
         
          <providerImplementations>  
            <git>jgit</git>  
          </providerImplementations>  
          <username>jethai@126.com</username>  
          <password>hit7293380</password>  
          
           <checkModificationExcludes>
			<checkModificationExclude>.project</checkModificationExclude>
			<checkModificationExclude>.settings</checkModificationExclude>
			<checkModificationExclude>.classpath</checkModificationExclude>
		   </checkModificationExcludes> 
			 <autoVersionSubmodules>true</autoVersionSubmodules>
            <useReleaseProfile>false</useReleaseProfile>
             <releaseProfiles>release</releaseProfiles>
         <goals>-f pom.xml deploy</goals> 
        </configuration>  
        <dependencies>  
          <dependency>  
            <groupId>org.apache.maven.scm</groupId>  
            <artifactId>maven-scm-provider-jgit</artifactId>  <!-- maven-scm-provider-gitexe -->
            <version>1.9.5</version>  
          </dependency>  
        </dependencies>  
    </plugin>  
			
		
	<!-- 打jar包  都是相对于target目录	 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<version>2.5</version>
			<configuration>
				<archive>
					<manifest>
						<addClasspath>true</addClasspath>
						<classpathPrefix>lib/</classpathPrefix>
						<mainClass>com.jikexueyuancrm.controller.AnHui</mainClass>
					</manifest>
				</archive>
          <excludes>
            <exclude>log4j.properties</exclude>
          </excludes>
			</configuration>
		</plugin>
		
		<!-- copy依赖到jar到lib目录下	 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<version>2.10</version>
			<executions>
				<execution>
					<id>copy-dependencies</id>
					<phase>package</phase>
					<goals>
						<goal>copy-dependencies</goal>
					</goals>
					<configuration>
						<outputDirectory>${project.build.directory}/lib</outputDirectory>
					</configuration>
				</execution>
			</executions>
		</plugin>	
		
		
		
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <warSourceDirectory>WebContent</warSourceDirectory>
          <failOnMissingWebXml>true</failOnMissingWebXml>
          <warName>${project.artifactId}-${project.version}</warName>
        </configuration>
      </plugin>
      
      
      
      <!--  添加jetty支持,Jetty 8 必须 Jdk 1.6+，Servlet 3.0，类似于 Tomcat 7-->
		<plugin>
		  <groupId>org.mortbay.jetty</groupId>
		  <artifactId>jetty-maven-plugin</artifactId>
		  <version>8.1.16.v20140903</version>
		  <configuration>
			<webAppSourceDirectory>${basedir}/WebContent</webAppSourceDirectory>
		  </configuration>
		</plugin>
		
		
		
	
	<!-- 远程部署 ,tomcat必须启动-->
			<plugin>  
                <groupId>org.codehaus.cargo</groupId>  
                <artifactId>cargo-maven2-plugin</artifactId>  
                <version>1.4.9</version>  
                <configuration>  
                    <container>  
                        <containerId>tomcat7x</containerId>  
                        <type>remote</type>  
                    </container>  
                    <configuration>  
                        <type>runtime</type>  
                        <properties> 
                          <cargo.hostname>localhost</cargo.hostname>
                           <cargo.servlet.port>80</cargo.servlet.port> 
                            <cargo.remote.username>admin</cargo.remote.username>  
                            <cargo.remote.password>admin</cargo.remote.password>  
                            <cargo.remote.manager.url>http://localhost/manager</cargo.remote.manager.url>  
                        </properties>  
                    </configuration>  
                </configuration>  
            </plugin> 
	  
	  
	  <!-- ProGuard混淆插件-->
         
          <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                
	             <version>2.0.11</version>
             
                <executions>
                    <execution>
                        <!-- 混淆时刻，这里是打包的时候混淆-->
                        <phase>package</phase>
                        <goals>
                            <!-- 使用插件的什么功能，当然是混淆-->
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 是否将生成的PG文件安装部署-->
                    <attach>true</attach>
                    <!-- 是否混淆-->
                    <obfuscate>true</obfuscate>
                    <!-- 指定生成文件分类 -->
                    <attachArtifactClassifier>pg</attachArtifactClassifier>
                    <options>
                        <!-- JDK目标版本1.6-->
                        <option>-target 1.6</option>
                        <!-- 不做压缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>
                        <option>-dontnote</option>
                        <option>-dontwarn</option>
                        <!-- 不做优化（变更代码实现逻辑）-->
                        <option>-dontoptimize</option>
                        <!-- 不跳过非公用类文件及成员-->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>
                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                        <option>-allowaccessmodification</option>
                        <!-- 使用独特的混淆类的成员名称来增加混淆-->
                        <option>-useuniqueclassmembernames</option>
                        <!-- 不混淆所有包名，本人测试混淆后WEB项目问题实在太多，毕竟Spring配置中有大量固定写法的包名-->
                        <option>-keeppackagenames</option>
                        <!-- 不混淆所有特殊的类-->
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>
                        <!-- 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射-->
                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>



                        <!-- 不混淆测试包下的所有类名，且类中的方法也不混淆,但是属性混淆-->
                        <option>-keep class com.jikexueyuancrm.test.** { &lt;methods&gt;; }</option>
               
                        
                        
                        <!-- 以下因为大部分是Spring管理的Bean，不对包类的类名进行混淆，但对类中的属性和方法混淆-->
                        <option>-keep class com.jikexueyuancrm.controller.** </option>
                        <option>-keep class com.jikexueyuancrm.service.impl.**</option>
                     
                       
                        <!-- 不混淆model包中的所有类以及类的属性及方法，实体包，混淆了会导致ORM框架及前端无法识别-->
                        <option>-keep class com.jikexueyuancrm.entity.** {*;}</option>
                      <option>-keep class com.jikexueyuancrm.entitycommon.** {*;}</option>
                      <option>-keep class org.hibernate.engine.jdbc.spi.** {*;}</option>
                          <option>-keep class org.** {*;}</option>
                            <option>-keep class sun.** {*;}</option> 
                            
                            
                    </options>
                    <outjar>${project.build.finalName}-pg.jar</outjar>
                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                    
                    
                    <libs>
                        <lib>${java.home}/jre/lib/rt.jar</lib>
                        
                           <lib>${java.home}/jre/lib/jce.jar</lib>
                    </libs>
                    <!-- 对什么东西进行加载，这里仅有classes，毕竟你也不可能对配置文件及JSP混淆吧-->
                    <injar>classes</injar>
                    <!-- 输出目录-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>
           
	<!-- scala支持 -->
	
              <!--Maven 默认只支持一个源文件夹，为了给项目配置多个源文件夹，我们需要用到一个 Maven 插件，
                                                                            目的是在 Maven 构建生命周期内为项目添加源文件夹：-->	
     <!-- build-helper-maven-plugin, 设置多个源文件夹 -->  
     <!--   <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                 <version>1.4</version>  
                <executions>
                   
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/scala</source>
                               
                            </sources>
                        </configuration>
                    </execution>
                       
                   
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>  -->
	
		<!--maven scala插件      默认只会编译  src/main/scala包下.scala文件,.java文件不会编译-->
		  <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>compile-scala</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile-scala</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
       
       
             	
    </plugins>
  
  </build>
</project>