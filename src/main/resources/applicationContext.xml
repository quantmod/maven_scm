<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task-3.1.xsd " >

		

	<!-- 配置数据源 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置DataSource c3p0 -->
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.passowrd}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		
		<!--最大空闲时间,300秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0   Mysql 8小时问题-->
		<property name="maxIdleTime" value="300"/>
		
		<!--连接池中保留的最小连接数。-->
        <property name="minPoolSize" value="5"/>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="100"/>
         <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="5"/>
		<property name="maxStatements" value="0"/> 
		<property name="checkoutTimeout" value="1000"/> 
		
		 <property name="testConnectionOnCheckin" value="true"></property>
  		<property name="testConnectionOnCheckout" value="true"></property>
  		<property name="idleConnectionTestPeriod"  value="60"></property>
   		<property name="preferredTestQuery" value="SELECT 1"></property>

	</bean>
<!-- spring与hibernate集成就不需要hibernate.cfg.xml文件了 -->


	<!--dbcp  -->
<!-- 	<bean id="dataSource1"  class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">          
    <property name="driverClassName" value="${jdbc.driverClass}" />         
    <property name="url" value="${jdbc.jdbcUrl}" />         
    <property name="username" value="${jdbc.user}" />         
    <property name="password" value="${jdbc.passowrd}" />      
     <property name="testOnBorrow" value="false" />        
       <property name="testWhileIdle" value="true" />     
         连接池启动时的初始值  
  <property name="initialSize" value="10" />  
  连接池的最大值  
  <property name="maxActive" value="100" />  
  最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止  
  <property name="maxIdle" value="50" />  
  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请  
  <property name="minIdle" value="10" />  
  #给出一条简单的sql语句进行验证  
  <property name="validationQuery" value="select getdate()" />  
  #在取出连接时进行有效验证  
  <property name="removeAbandonedTimeout" value="120" />  
  <property name="removeAbandoned" value="true" />  
  #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。  
  <property name="timeBetweenEvictionRunsMillis" value="3600000" />  
  #连接的超时时间，默认为半小时。  
  <property name="minEvictableIdleTimeMillis" value="3600000" />    
	</bean>   -->  
	
	
	
	
	<!-- 配置SessionFactory -->
	<bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		id="sessionFactory" >
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		
	  <!-- 扫描的实体包(pojo) 可以不配置mappingResources中实体映射文件hbm.xml-->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy"></bean>
		</property>
		<property name="packagesToScan" value="com.jikexueyuancrm.entity"></property>
		
		
			<!-- 配置Hibernate 的常用属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 数据库的方言 -->
			 	<prop key="hibernate.autoReconnect">true</prop>  
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- <property name="mappingResources">
		<list> 
			<value>com/jikexueyuancrm/entity/ArcticleLink.hbm.xml</value>
			<value>com/jikexueyuancrm/entity/WebContent.hbm.xml</value>
			<value>com/jikexueyuancrm/entity/WxTitleImg.hbm.xml</value>
		</list>
		</property> -->
	</bean>

	<!-- 配置Hibernate 的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 事务增强 -->
	
 	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
  
        <tx:attributes>  
  
            <!--  name 为方法名   -->
  
            <tx:method name="*" propagation="REQUIRED" read-only="false" />  
  
        </tx:attributes>  
  
    </tx:advice>   
	
	<!-- proxy-target-class="true" 代表CGLIB类代理,基于类-->
	
	 <!-- 在多个表达式之间使用  || , or 表示  或 ，使用  && , and 表示  与 ， ！ 表示 非 -->
	 <aop:config  proxy-target-class="true" >
        <aop:pointcut id="pointcut" expression="execution(* com.jikexueyuancrm.service.impl.*.*(..)) ! com.jikexueyuancrm.service.impl.ErrorReqUrlStatImpl.*(..))"  />  
  
        <aop:advisor pointcut-ref="pointcut"  advice-ref="txAdvice" />  
  
    </aop:config>  
 

	
	
	
	
	
	<!-- service -->
	
	<bean id="arcticleLinkServiceImpl"  class="com.jikexueyuancrm.service.impl.ArcticleLinkServiceImpl" >
	<property name="sessionFactory" ref="sessionFactory" />
  </bean>
      
      <bean id="webContentServiceImpl"  class="com.jikexueyuancrm.service.impl.WebContentServiceImpl" >
          <property name="sessionFactory" ref="sessionFactory" />
     </bean>
             
      <bean id="wxTitleImgServiceImpl"  class="com.jikexueyuancrm.service.impl.WxTitleImgServiceImpl" > 
              <property name="sessionFactory" ref="sessionFactory" />
        </bean>
        
 
	<bean id="resultServiceImpl"  class="com.jikexueyuancrm.service.impl.ResultServiceImpl" >
	<property name="sessionFactory" ref="sessionFactory" />
  </bean>
     
        	<bean id="errorUrlServiceImpl"  class="com.jikexueyuancrm.service.impl.ErrorUrlServiceImpl" >
	<property name="sessionFactory" ref="sessionFactory" />
  </bean>
	    	<bean id="clientServiceImpl"  class="com.jikexueyuancrm.service.impl.ClientServiceImpl" >
	<property name="sessionFactory" ref="sessionFactory" />
  </bean>

	 <import resource="applicationContext-crawlcommon.xml"/>
	
	
</beans>
